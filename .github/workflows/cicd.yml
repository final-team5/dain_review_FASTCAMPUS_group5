name: Dain Review CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Set Environment Variables
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
        echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> $GITHUB_ENV
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV
        
        echo "AWS_ACCESS_KEY_ID=${{ secrets.aws_access_key_id }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.aws_secret_access_key }}" >> $GITHUB_ENV
        echo "EC2_HOST=${{ secrets.ec2_host }}" >> $GITHUB_ENV
        echo "EC2_KEY=${{ secrets.ec2_key }}" >> $GITHUB_ENV
        echo "EC2_USER=${{ secrets.ec2_user }}" >> $GITHUB_ENV

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test

    - name: Package application
      run: ./gradlew assemble

    - uses: actions/upload-artifact@v2
      with:
        name: packaged-app
        path: build/libs/*.jar

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.ec2_host }}
        EC2_KEY: ${{ secrets.ec2_key }}
        EC2_USER: ${{ secrets.ec2_user }}
      run: |
        echo "${{ secrets.ec2_key }}" > ec2_key.pem
        chmod 400 ec2_key.pem
        scp -i ec2_key.pem -o StrictHostKeyChecking=no build/libs/*.jar ${{ secrets.ec2_user }}@${{ secrets.ec2_host }}:/home/${{ secrets.ec2_user }}/app.jar
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.ec2_user }}@${{ secrets.ec2_host }} << 'EOF'
          # Stop existing application
          pkill -f 'java -jar'
          # Start new application
          nohup java -jar /home/${{ secrets.ec2_user }}/app.jar > app.log 2>&1 &
        EOF

