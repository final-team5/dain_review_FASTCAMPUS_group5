name: Dain Review CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_PW }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dain_review_FASTCAMPUS_group5:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dain_review_FASTCAMPUS_group5:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_ACCESS_KEY_PASSWORD }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PASSWORD }}" > /tmp/fastCampers-final-key.pem
          chmod 600 /tmp/fastCampers-final-key.pem
          ssh -o StrictHostKeyChecking=no -i /tmp/fastCampers-final-key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USERNAME }}
            if [ -d "dain_review_FASTCAMPUS_group5" ]; then
              rm -rf dain_review_FASTCAMPUS_group5
            fi
            git clone https://github.com/final-team5/dain_review_FASTCAMPUS_group5.git
            cd dain_review_FASTCAMPUS_group5
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dain_review_FASTCAMPUS_group5:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --name my-app -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.DATABASE_URL }}:3306/your_database_name \ <- 추가해야 할 부분
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/dain_review_FASTCAMPUS_group5:latest
          EOF
